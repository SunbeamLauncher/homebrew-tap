# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Sunbeam < Formula
  desc ""
  homepage "https://pomdtr.github.io/sunbeam"
  version "0.9.8"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/pomdtr/sunbeam/releases/download/v0.9.8/sunbeam_Darwin_arm64.tar.gz"
      sha256 "174ad332bbfa45102eb7d05a4f57785a9affd06a388c8189b77a6d3ca6cc8c1a"

      def install
        bin.install "sunbeam"
        bash_completion.install "completions/sunbeam.bash"
        zsh_completion.install "completions/sunbeam.zsh"
        fish_completion.install "completions/sunbeam.fish"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/pomdtr/sunbeam/releases/download/v0.9.8/sunbeam_Darwin_x86_64.tar.gz"
      sha256 "330dbca8d7a48a8577f10954b41b9507290a5e309b5869ed28a2458198824093"

      def install
        bin.install "sunbeam"
        bash_completion.install "completions/sunbeam.bash"
        zsh_completion.install "completions/sunbeam.zsh"
        fish_completion.install "completions/sunbeam.fish"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/pomdtr/sunbeam/releases/download/v0.9.8/sunbeam_Linux_x86_64.tar.gz"
      sha256 "3156db2926d7c3cbc57996115dbe8970615aaa683284463354ee6b11b1e0cc2d"

      def install
        bin.install "sunbeam"
        bash_completion.install "completions/sunbeam.bash"
        zsh_completion.install "completions/sunbeam.zsh"
        fish_completion.install "completions/sunbeam.fish"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/pomdtr/sunbeam/releases/download/v0.9.8/sunbeam_Linux_arm64.tar.gz"
      sha256 "a2024aa62eea88a25d498a7942d4b0fad347e1049a31253617b04ef65ef5161f"

      def install
        bin.install "sunbeam"
        bash_completion.install "completions/sunbeam.bash"
        zsh_completion.install "completions/sunbeam.zsh"
        fish_completion.install "completions/sunbeam.fish"
      end
    end
  end
end
