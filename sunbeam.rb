# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Sunbeam < Formula
  desc ""
  homepage "https://pomdtr.github.io/sunbeam"
  version "0.9.10"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/pomdtr/sunbeam/releases/download/v0.9.10/sunbeam_Darwin_arm64.tar.gz"
      sha256 "0d5d86c55b346c305d81fdb8e71d6c970f6369340cdd01448049d0bcd2c3125f"

      def install
        bin.install "sunbeam"
        bash_completion.install "completions/sunbeam.bash"
        zsh_completion.install "completions/sunbeam.zsh"
        fish_completion.install "completions/sunbeam.fish"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/pomdtr/sunbeam/releases/download/v0.9.10/sunbeam_Darwin_x86_64.tar.gz"
      sha256 "cf4b258473c0ef72e1d4b687dec245ce6bb3dac8a2b165d3d0a9b942f9a27dce"

      def install
        bin.install "sunbeam"
        bash_completion.install "completions/sunbeam.bash"
        zsh_completion.install "completions/sunbeam.zsh"
        fish_completion.install "completions/sunbeam.fish"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/pomdtr/sunbeam/releases/download/v0.9.10/sunbeam_Linux_x86_64.tar.gz"
      sha256 "3af3a2edd624c40be1edfa8e1dbda225076f31814c12ed5d6ec33c206e025614"

      def install
        bin.install "sunbeam"
        bash_completion.install "completions/sunbeam.bash"
        zsh_completion.install "completions/sunbeam.zsh"
        fish_completion.install "completions/sunbeam.fish"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/pomdtr/sunbeam/releases/download/v0.9.10/sunbeam_Linux_arm64.tar.gz"
      sha256 "69bc6b864afec82cfb3e7d9aa9121de2247bc1f3f6ada3b136bc840a970cbe8d"

      def install
        bin.install "sunbeam"
        bash_completion.install "completions/sunbeam.bash"
        zsh_completion.install "completions/sunbeam.zsh"
        fish_completion.install "completions/sunbeam.fish"
      end
    end
  end
end
