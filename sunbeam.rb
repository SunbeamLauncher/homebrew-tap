# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Sunbeam < Formula
  desc ""
  homepage "https://pomdtr.github.io/sunbeam"
  version "0.9.13"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/pomdtr/sunbeam/releases/download/v0.9.13/sunbeam_Darwin_x86_64.tar.gz"
      sha256 "cbe0de4cefa3b4a7d99c579517d29643e3a66f80c631d8574b492edd704f6af3"

      def install
        bin.install "sunbeam"
        bash_completion.install "completions/sunbeam.bash"
        zsh_completion.install "completions/sunbeam.zsh"
        fish_completion.install "completions/sunbeam.fish"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/pomdtr/sunbeam/releases/download/v0.9.13/sunbeam_Darwin_arm64.tar.gz"
      sha256 "9847066f56ae6257f791b427c7b6c1b55a7f4065f0f4a38e0e7ac2e5323d2398"

      def install
        bin.install "sunbeam"
        bash_completion.install "completions/sunbeam.bash"
        zsh_completion.install "completions/sunbeam.zsh"
        fish_completion.install "completions/sunbeam.fish"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/pomdtr/sunbeam/releases/download/v0.9.13/sunbeam_Linux_x86_64.tar.gz"
      sha256 "5b4627be1d4daf74bf550e464bb59f812af4f4222529b5dc381dfcf784777c8c"

      def install
        bin.install "sunbeam"
        bash_completion.install "completions/sunbeam.bash"
        zsh_completion.install "completions/sunbeam.zsh"
        fish_completion.install "completions/sunbeam.fish"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/pomdtr/sunbeam/releases/download/v0.9.13/sunbeam_Linux_arm64.tar.gz"
      sha256 "9731c1f9735c51d3f3e36706bc92fb7a88eeee2a535f606d28017b01289b11ad"

      def install
        bin.install "sunbeam"
        bash_completion.install "completions/sunbeam.bash"
        zsh_completion.install "completions/sunbeam.zsh"
        fish_completion.install "completions/sunbeam.fish"
      end
    end
  end
end
