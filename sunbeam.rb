# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Sunbeam < Formula
  desc ""
  homepage "https://pomdtr.github.io/sunbeam"
  version "0.9.17"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/pomdtr/sunbeam/releases/download/v0.9.17/sunbeam_Darwin_arm64.tar.gz"
      sha256 "4f985919a12ace24202597d7d19fc8d5d1afd3e5205a1700d80db7505cd207ab"

      def install
        bin.install "sunbeam"
        bash_completion.install "completions/sunbeam.bash"
        zsh_completion.install "completions/sunbeam.zsh"
        fish_completion.install "completions/sunbeam.fish"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/pomdtr/sunbeam/releases/download/v0.9.17/sunbeam_Darwin_x86_64.tar.gz"
      sha256 "d0463488305b7cabdd7c5516dac2caaa3e13a83ef50404c1f44c3e32b32ba63c"

      def install
        bin.install "sunbeam"
        bash_completion.install "completions/sunbeam.bash"
        zsh_completion.install "completions/sunbeam.zsh"
        fish_completion.install "completions/sunbeam.fish"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/pomdtr/sunbeam/releases/download/v0.9.17/sunbeam_Linux_x86_64.tar.gz"
      sha256 "483283f4b79392502707ef734cc56324c592ab94ce2dd0781b8f2b0e27899303"

      def install
        bin.install "sunbeam"
        bash_completion.install "completions/sunbeam.bash"
        zsh_completion.install "completions/sunbeam.zsh"
        fish_completion.install "completions/sunbeam.fish"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/pomdtr/sunbeam/releases/download/v0.9.17/sunbeam_Linux_arm64.tar.gz"
      sha256 "389c454d08203b850dfad4677ae8df2dc8580a727f8848476e5a5f22cddd57bd"

      def install
        bin.install "sunbeam"
        bash_completion.install "completions/sunbeam.bash"
        zsh_completion.install "completions/sunbeam.zsh"
        fish_completion.install "completions/sunbeam.fish"
      end
    end
  end
end
